version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"
      GF_AUTH_BASIC_ENABLED: "true"
      GF_DATABASE_TYPE: "postgres"
      GF_DATABASE_HOST: "db:5432"
      GF_DATABASE_NAME: "app"
      GF_DATABASE_USER: "postgres"
      GF_DATABASE_PASSWORD: "postgres"
      GF_SECURITY_COOKIE_SECURE: "false"
      GF_SECURITY_ALLOW_EMBEDDING_SAME_ORIGIN: "true"
      GF_SECURITY_ALLOW_EMBEDDING_FROM_ORIGIN: "http://localhost:5000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  grafana_data:

networks:
  app-network:
    driver: bridge 